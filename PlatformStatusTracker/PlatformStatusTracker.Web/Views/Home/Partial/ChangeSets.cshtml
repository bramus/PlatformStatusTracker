@model PlatformStatusTracker.Web.ViewModels.Home.ChangeSetsViewModel
@using PlatformStatusTracker.Core.Model
@using PlatformStatusTracker.Core.Data
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.Razor
@using System.Text.RegularExpressions
@using PlatformStatusTracker.Web.ViewModels.Home

@{
    Func<string, IHtmlContent> ToModernIePageFragment =
        @<text>@Regex.Replace(item.ToLowerInvariant(), @"\W", "")</text>;
    Func<WebKitPlatformStatus, IHtmlContent> WebKitUrl =
        @<text>
            @if (String.IsNullOrWhiteSpace(item.WebKitUrl))
            {
                <span class="changes_item-name">@item.Name</span>
            }
            else
            {
                <a class="changes_item-name" href="@item.WebKitUrl">@item.Name</a>
            }
        </text>;
    Func<MozillaPlatformStatus, IHtmlContent> MozillaUrl =
        @<text>
            @if (String.IsNullOrWhiteSpace(item.Slug))
            {
                <span class="changes_item-name">@item.Name</span>
            }
            else
            {
                <a class="changes_item-name" href="https://platform-status.mozilla.org/#@item.Slug">@item.Name</a>
            }
        </text>;
    Func<IePlatformStatus, IHtmlContent> EdgeUrl =
        @<text>
        @if (String.IsNullOrWhiteSpace(item.Name))
        {
            <span class="changes_item-name">@item.Name</span>
        }
        else
        {
            <a class="changes_item-name" href="https://dev.modern.ie/platform/status/@ToModernIePageFragment(item.Name)/">@item.Name</a>
        }
        </text>;
    Func<ChromiumPlatformStatus, IHtmlContent> ChromiumUrl =
        @<text>
        @if (String.IsNullOrWhiteSpace(item.BugUrl))
        {
            <span class="changes_item-name">@item.Name</span>
        }
        else
        {
            <a class="changes_item-name" href="@item.BugUrl">@item.Name</a>
        }
        </text>;
}
@functions
{
    string Value(int? value) => value.HasValue ? value.ToString() : "(n/a)";
    string Value(string value) => !String.IsNullOrWhiteSpace(value) ? value : "(n/a)";
    string Value(bool? value) => value.HasValue ? value.ToString() : "(n/a)";
}

@if (Model.IeChangeSet != null && Model.IeChangeSet.Changes.Any())
{
    <section>
        <h1><a href="https://dev.modern.ie/platform/status/"><img src="~/images/shared/Icon-Edge.png" alt="" />Edge</a></h1>
        <ul class="changes">
            @foreach (var change in Model.IeChangeSet.Changes.Cast<IeChangeInfo>())
            {
                if (change.IsAdded)
                {
                    <li class="changes_item changes_item-Added">
                        <span class="changes_item-label">Added</span> @EdgeUrl(change.NewStatus)
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", null, change.NewStatus.IeStatus.Text))
                            @if (change.NewStatus.IeStatus.Flag.HasValue)
                            {
                                @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Enabling in about:flags", change.NewStatus.IeStatus.Flag))
                            }
                        </table>
                    </li>
                }
                if (change.IsRemoved)
                {
                    <li class="changes_item changes_item-Removed">
                        <span class="changes_item-label">Removed</span> @EdgeUrl(change.OldStatus)
                    </li>
                }
                if (change.IsChanged)
                {
                    <li class="changes_item changes_item-Changed">
                        <span class="changes_item-label">Changed</span> @EdgeUrl(change.NewStatus)
                        @{ 
                            var (oldStatus, newStatus) = (change.OldStatus.IeStatus, change.NewStatus.IeStatus);
                        }
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", newStatus.Text, oldStatus.Text))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Priority", newStatus.Priority, oldStatus.Priority))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Prefixed", newStatus.IePrefixed, oldStatus.IePrefixed))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("UnPrefixed", newStatus.IeUnprefixed, oldStatus.IeUnprefixed))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Enabling in about:flags", newStatus.Flag, oldStatus.Flag))
                        </table>
                    </li>
                }
                @*
                    <li>
                        NewStatus: @(change.NewStatus != null ? change.NewStatus.Id.ToString() : ""),
                        OldStatus: @(change.OldStatus != null ? change.OldStatus.Id.ToString() : "")
                    </li>
                *@
            }
        </ul>
    </section>
}
@if (Model.ChromeChangeSet != null && Model.ChromeChangeSet.Changes.Any())
{
    <section>
        <h1><a href="http://www.chromestatus.com/features"><img src="~/images/shared/Icon-Chromium.png" alt="" />Chromium</a></h1>
        <ul class="changes">
            @foreach (var change in Model.ChromeChangeSet.Changes.Cast<ChromiumChangeInfo>())
            {
                if (change.IsAdded)
                {
                    <li class="changes_item changes_item-Added">
                        <span class="changes_item-label">Added</span> @ChromiumUrl(change.NewStatus)
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", change.NewStatus.Status))
                        </table>
                    </li>
                }
                if (change.IsRemoved)
                {
                    <li class="changes_item changes_item-Removed">
                        <span class="changes_item-label">Removed</span> @ChromiumUrl(change.OldStatus)
                    </li>
                }
                if (change.IsChanged)
                {
                    <li class="changes_item changes_item-Changed">
                        <span class="changes_item-label">Changed</span> @ChromiumUrl(change.NewStatus)
                        @{ 
                            var (oldStatus, newStatus) = (change.OldStatus, change.NewStatus);
                        }
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", newStatus.Status, oldStatus.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Flag", newStatus.Flag, oldStatus.Flag))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Prefixed", newStatus.Prefixed, oldStatus.Prefixed))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Android", newStatus.Android, oldStatus.Android))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Desktop", newStatus.Desktop, oldStatus.Desktop))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Ios", newStatus.Ios, oldStatus.Ios))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("ShippedMilestone", newStatus.ShippedMilestone, oldStatus.ShippedMilestone))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("ShippedOperaAndroidMilestone", newStatus.ShippedOperaAndroidMilestone, oldStatus.ShippedOperaAndroidMilestone))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("ShippedOperaMilestone", newStatus.ShippedOperaMilestone, oldStatus.ShippedOperaMilestone))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("ShippedWebViewMilestone", newStatus.ShippedWebViewMilestone, oldStatus.ShippedWebViewMilestone))
                        </table>
                    </li>
                }
                @*
                    <li>
                        NewStatus: @(change.NewStatus != null ? change.NewStatus.Id.ToString() : ""),
                        OldStatus: @(change.OldStatus != null ? change.OldStatus.Id.ToString() : "")
                    </li>
                *@
            }
        </ul>
    </section>
}
@if (Model.WebKitWebCoreChangeSet != null && Model.WebKitWebCoreChangeSet.Changes.Any())
{
    <section>
        <h1><a href="http://trac.webkit.org/browser/trunk/Source/WebCore/features.json"><img src="~/images/shared/Icon-WebKit.png" alt="" />WebKit (WebCore)</a></h1>
        <ul class="changes">
            @foreach (var change in Model.WebKitWebCoreChangeSet.Changes.Cast<WebKitChangeInfo>())
            {
                if (change.IsAdded)
                {
                    <li class="changes_item changes_item-Added">
                        <span class="changes_item-label">Added</span> @WebKitUrl(change.NewStatus)
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", change.NewStatus.Status.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("EnabledByDefault", change.NewStatus.Status.EnabledByDefault))
                        </table>
s                    </li>
                }
                if (change.IsRemoved)
                {
                    <li class="changes_item changes_item-Removed">
                        <span class="changes_item-label">Removed</span> @WebKitUrl(change.OldStatus)
                    </li>
                }
                if (change.IsChanged)
                {
                    <li class="changes_item changes_item-Changed">
                        <span class="changes_item-label">Changed</span> @WebKitUrl(change.NewStatus)
                        @{
                            var (oldStatus, newStatus) = (change.OldStatus, change.NewStatus);
                        }
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", newStatus.Status.Status, oldStatus.Status.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("EnabledByDefault", newStatus.Status.EnabledByDefault, oldStatus.Status.EnabledByDefault))
                        </table>
                    </li>
                }
                @*
                    <li>
                        NewStatus: @(change.NewStatus != null ? change.NewStatus.Id.ToString() : ""),
                        OldStatus: @(change.OldStatus != null ? change.OldStatus.Id.ToString() : "")
                    </li>
                *@
            }
        </ul>
    </section>
}
@if (Model.WebKitJavaScriptCoreChangeSet != null && Model.WebKitJavaScriptCoreChangeSet.Changes.Any())
{
    <section>
        <h1><a href="http://trac.webkit.org/browser/trunk/Source/JavaScriptCore/features.json"><img src="~/images/shared/Icon-WebKit.png" alt="" />WebKit (JavaScriptCore)</a></h1>
        <ul class="changes">
            @foreach (var change in Model.WebKitJavaScriptCoreChangeSet.Changes.Cast<WebKitChangeInfo>())
            {
                if (change.IsAdded)
                {
                    <li class="changes_item changes_item-Added">
                        <span class="changes_item-label">Added</span> @WebKitUrl(change.NewStatus)
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", change.NewStatus.Status.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("EnabledByDefault", change.NewStatus.Status.EnabledByDefault))
                        </table>
                    </li>
                }
                if (change.IsRemoved)
                {
                    <li class="changes_item changes_item-Removed">
                        <span class="changes_item-label">Removed</span> @WebKitUrl(change.OldStatus)
                    </li>
                }
                if (change.IsChanged)
                {
                    <li class="changes_item changes_item-Changed">
                        <span class="changes_item-label">Changed</span> @WebKitUrl(change.NewStatus)
                        @{
                            var (oldStatus, newStatus) = (change.OldStatus, change.NewStatus);
                        }
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", newStatus.Status.Status, oldStatus.Status.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("EnabledByDefault", newStatus.Status.EnabledByDefault, oldStatus.Status.EnabledByDefault))
                        </table>
                    </li>
                }
                @*
                    <li>
                        NewStatus: @(change.NewStatus != null ? change.NewStatus.Id.ToString() : ""),
                        OldStatus: @(change.OldStatus != null ? change.OldStatus.Id.ToString() : "")
                    </li>
                *@
            }
        </ul>
    </section>
}
@if (Model.MozillaChangeSet != null && Model.MozillaChangeSet.Changes.Any())
{
    <section>
        <h1><a href="https://platform-status.mozilla.org/"><img src="~/images/shared/Icon-Firefox.png" alt="" />Firefox</a></h1>
        <ul class="changes">
            @foreach (var change in Model.MozillaChangeSet.Changes.Cast<MozillaChangeInfo>())
            {
                if (change.IsAdded)
                {
                    <li class="changes_item changes_item-Added">
                        <span class="changes_item-label">Added</span> @MozillaUrl(change.NewStatus)
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", change.NewStatus.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Channel", change.NewStatus.Channel))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Version", change.NewStatus.Version))
                        </table>
                    </li>
                }
                if (change.IsRemoved)
                {
                    <li class="changes_item changes_item-Removed">
                        <span class="changes_item-label">Removed</span> @MozillaUrl(change.OldStatus)
                    </li>
                }
                if (change.IsChanged)
                {
                    <li class="changes_item changes_item-Changed">
                        <span class="changes_item-label">Changed</span> @MozillaUrl(change.NewStatus)
                        @{
                            var (oldStatus, newStatus) = (change.OldStatus, change.NewStatus);
                        }
                        <table>
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Status", newStatus.Status, oldStatus.Status))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Channel", newStatus.Channel, oldStatus.Channel))
                            @Html.Partial("Partial/ChangesTableRow", new ChangesTableRowViewModel("Version", newStatus.Version, oldStatus.Version))
                        </table>
                    </li>
                }
                @*
                    <li>
                        NewStatus: @(change.NewStatus != null ? change.NewStatus.Id.ToString() : ""),
                        OldStatus: @(change.OldStatus != null ? change.OldStatus.Id.ToString() : "")
                    </li>
                *@
            }
        </ul>
    </section>
}